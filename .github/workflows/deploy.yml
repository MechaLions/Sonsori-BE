name: FastAPI CI/CD


on:
  push:
    branches: [ "main" ]

jobs:
  CI:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3

    - name: Create .env file
      run: |
        touch .env
        echo MYSQL_USER=${{ secrets.MYSQL_USER }} >> .env
        echo MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }} >> .env
        echo MYSQL_HOST=${{ secrets.MYSQL_HOST }} >> .env
        echo MYSQL_DB=${{ secrets.MYSQL_DB }} >> .env

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}

  CD:
    needs: [ CI ]
    runs-on: ubuntu-20.04

    steps:
    - name: Docker Image Pull and Container Run
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          docker stop fastapi-app
          docker rm fastapi-app
          docker image rm ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
          docker run -d -p 8000:8000 \
          -v /root/my-proj/resources/images:/app/media \
          -v /root/my-proj/resources/static:/app/static \
          --name fastapi-app ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPONAME }}
